{"ast":null,"code":"var _jsxFileName = \"/home/futurum/prywatne/DesignLab/frontend/debts-app/src/Protected.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedPage() {\n  _s();\n  const navigate = useNavigate();\n  const [totalDebt, setTotalDebt] = useState('');\n  const [debts, setDebts] = useState([]);\n  const [name, setName] = useState('');\n  const [allUsers, setUsers] = useState([]);\n  const [userId, setUserId] = useState('');\n  const [title, setTitle] = useState('');\n  const [debtValue, setDebtValue] = useState('');\n\n  //HAVE TO CHANGE ERROR HANDLING!!!\n\n  useEffect(() => {\n    const verifyToken = async () => {\n      //What out token is\n      const token = localStorage.getItem('token');\n      //For us only, dont use in code\n      //console.log(token)\n      if (!token) {\n        console.error('No token found');\n        navigate('/login');\n        return;\n      }\n      const username = localStorage.getItem('username');\n      setName(username);\n      try {\n        //Token path to verify token\n        const response = await fetch(`http://localhost:8000/verify-token`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Token verification has failed!');\n        }\n\n        //--------------------------------------------------------------------------------\n\n        const sumResponse = await fetch(`http://localhost:8000/protected/debts/sum/`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!sumResponse.ok) {\n          throw new Error(\"Failed to fetch debts summary!\");\n        }\n        const sumData = await sumResponse.json();\n        setTotalDebt(sumData.totalDebt);\n\n        //--------------------------------------------------------------------------------\n\n        const debtsResponse = await fetch(`http://localhost:8000/protected/debts/all/`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!debtsResponse.ok) {\n          throw new Error(\"Failed to fetch debts!\");\n        }\n        const debtsData = await debtsResponse.json();\n        setDebts(debtsData.all_user_debts);\n\n        //--------------------------------------------------------------------------------\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        localStorage.removeItem('token');\n        //navigate('/login');\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate('/login');\n    window.location.reload();\n  };\n  const deleteDebt = async debtId => {\n    const token = localStorage.getItem('token');\n    try {\n      const deleteResponse = await fetch(`http://localhost:8000/protected/debts/${debtId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!deleteResponse.ok) {\n        throw new Error(\"Failed to delete debt!\");\n      }\n      setDebts(debts.filter(debt => debt.id !== debtId));\n      alert(\"Debt paid succesfully!\");\n      window.location.reload();\n    } catch (error) {\n      console.log(\"Error deleteing debt:\", error);\n    }\n  };\n  const getUsers = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const usersResponse = await fetch(`http://localhost:8000/protected/users`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!usersResponse.ok) {\n        throw new Error(\"Failed to get all users!\");\n      }\n      const usersData = await usersResponse.json();\n      setUsers(usersData.allUsers);\n    } catch (error) {\n      console.log(\"Error getting users:\", error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  //We can do this by using local function e, idk if its better\n  const handleSelect = event => {\n    const selectedUserId = event.target.value;\n    const selectedUser = allUsers.find(user => user.id === parseInt(selectedUserId));\n    if (selectedUser) {\n      setUserId(selectedUserId);\n    }\n  };\n  const createDebt = async event => {\n    const token = localStorage.getItem('token');\n    event.preventDefault();\n    const receiver = name;\n    const amount = debtValue;\n    const user_id = userId;\n    const formDetails = {\n      title,\n      receiver,\n      amount,\n      user_id\n    };\n    try {\n      const response = await fetch(\"http://localhost:8000/protected/debts/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": `Bearer ${token}`\n          //Because UserBase is Pydantic model in FastAPI so it have to parse JSON body not URL\n        },\n        body: JSON.stringify(formDetails)\n      });\n      if (response.ok) {\n        alert(\"Debt added succesfully!\");\n      } else {\n        throw new Error(\"Failed to add debt!\");\n      }\n    } catch (error) {\n      console.error(\"Error while adding debt\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your debt is: \", totalDebt, \" z\\u0142\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your debts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), debts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no debts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this) // If no debts, show a message\n      : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: debts.map(debt => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: debt.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), \" to \", debt.receiver, \" \\u2014 \", debt.amount, \" z\\u0142\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteDebt(debt.id),\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this)]\n        }, debt.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createDebt,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add new receipt here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"value\",\n        children: \"Value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"value\",\n        min: \"0\",\n        step: \"0.01\",\n        onChange: e => setDebtValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"receiver\",\n        children: \"To:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"receiver\",\n        onChange: handleSelect,\n        value: userId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose receiver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), allUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.id,\n          id: user.username,\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add debt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n}\n_s(ProtectedPage, \"DFl5VJKS78blxHgXKYPGrZDQauI=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedPage;\nexport default ProtectedPage;\nvar _c;\n$RefreshReg$(_c, \"ProtectedPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","ProtectedPage","_s","navigate","totalDebt","setTotalDebt","debts","setDebts","name","setName","allUsers","setUsers","userId","setUserId","title","setTitle","debtValue","setDebtValue","verifyToken","token","localStorage","getItem","console","error","username","response","fetch","method","headers","ok","Error","sumResponse","sumData","json","debtsResponse","debtsData","all_user_debts","removeItem","handleLogout","clear","window","location","reload","deleteDebt","debtId","deleteResponse","filter","debt","id","alert","log","getUsers","usersResponse","usersData","handleSelect","event","selectedUserId","target","value","selectedUser","find","user","parseInt","createDebt","preventDefault","receiver","amount","user_id","formDetails","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","onSubmit","htmlFor","type","placeholder","onChange","e","min","step","_c","$RefreshReg$"],"sources":["/home/futurum/prywatne/DesignLab/frontend/debts-app/src/Protected.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ProtectedPage() {\n    const navigate = useNavigate();\n    const [totalDebt, setTotalDebt] = useState('');\n    const [debts, setDebts] = useState([]);\n    const [name, setName] = useState('');\n    const [allUsers, setUsers] = useState([]);\n    const [userId, setUserId] = useState('');\n    const [title, setTitle] = useState('');\n    const [debtValue, setDebtValue] = useState('');\n\n    //HAVE TO CHANGE ERROR HANDLING!!!\n\n    useEffect(() => {\n        const verifyToken = async () => {\n            //What out token is\n            const token = localStorage.getItem('token');\n            //For us only, dont use in code\n            //console.log(token)\n            if (!token) {\n                console.error('No token found');\n                navigate('/login');\n                return;\n            }\n\n            const username = localStorage.getItem('username');\n            setName(username);\n\n            try {\n\n                //Token path to verify token\n                const response = await fetch(`http://localhost:8000/verify-token`, {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": `Bearer ${token}`\n                    }\n                });\n\n                if (!response.ok) {\n                    throw new Error('Token verification has failed!');\n                }\n\n                //--------------------------------------------------------------------------------\n\n                const sumResponse = await fetch(`http://localhost:8000/protected/debts/sum/`, {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": `Bearer ${token}`,\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n\n                if (!sumResponse.ok) {\n                    throw new Error(\"Failed to fetch debts summary!\");\n                }\n\n                const sumData = await sumResponse.json();\n                setTotalDebt(sumData.totalDebt);\n\n                //--------------------------------------------------------------------------------\n\n                const debtsResponse = await fetch(`http://localhost:8000/protected/debts/all/`, {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": `Bearer ${token}`,\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n\n                if (!debtsResponse.ok) {\n                    throw new Error(\"Failed to fetch debts!\");\n                }\n\n                const debtsData = await debtsResponse.json();\n                setDebts(debtsData.all_user_debts);\n\n                //--------------------------------------------------------------------------------\n\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                localStorage.removeItem('token');\n                //navigate('/login');\n            }\n        };\n        verifyToken();\n    }, [navigate]);\n\n    const handleLogout = () => {\n        localStorage.clear();\n        navigate('/login');\n        window.location.reload();\n    };\n\n    const deleteDebt = async (debtId) => {\n        const token = localStorage.getItem('token');\n        try {\n            const deleteResponse = await fetch(`http://localhost:8000/protected/debts/${debtId}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            });\n\n            if (!deleteResponse.ok) {\n                throw new Error(\"Failed to delete debt!\");\n            }\n\n            setDebts(debts.filter(debt => debt.id !== debtId));\n            alert(\"Debt paid succesfully!\")\n            window.location.reload();\n        } catch (error) {\n            console.log(\"Error deleteing debt:\", error)\n        }\n    };\n\n    const getUsers = async () => {\n        const token = localStorage.getItem('token');\n        try {\n            const usersResponse = await fetch(`http://localhost:8000/protected/users`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            });\n\n            if (!usersResponse.ok) {\n                throw new Error(\"Failed to get all users!\");\n            }\n\n            const usersData = await usersResponse.json();\n            setUsers(usersData.allUsers)\n\n        } catch (error) {\n            console.log(\"Error getting users:\", error)\n        }\n    };\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    //We can do this by using local function e, idk if its better\n    const handleSelect = (event) => {\n        const selectedUserId = event.target.value;\n        const selectedUser = allUsers.find(user => user.id === parseInt(selectedUserId));\n        if (selectedUser) {\n            setUserId(selectedUserId);\n        }\n    };\n\n    const createDebt = async (event) => {\n        const token = localStorage.getItem('token');\n        event.preventDefault();\n        const receiver = name;\n        const amount = debtValue;\n        const user_id = userId\n\n        const formDetails = {\n            title,\n            receiver,\n            amount,\n            user_id\n        }\n\n        try {\n            const response = await fetch(\"http://localhost:8000/protected/debts/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"Authorization\": `Bearer ${token}`\n                    //Because UserBase is Pydantic model in FastAPI so it have to parse JSON body not URL\n                },\n                body: JSON.stringify(formDetails)\n            });\n\n            if (response.ok) {\n                alert(\"Debt added succesfully!\");\n            }\n            else {\n                throw new Error(\"Failed to add debt!\");\n            }\n        } catch (error) {\n            console.error(\"Error while adding debt\", error)\n        }\n    };\n\n\n    return (\n        <main>\n            <h2>Welcome {name}</h2>\n            <h3>Your debt is: {totalDebt} zł</h3>\n            <section>\n                <h4>Your debts:</h4>\n                {debts.length === 0 ? (\n                    <p>You have no debts.</p>  // If no debts, show a message\n                ) : (\n                    <ul>\n                        {debts.map((debt) => (\n                            <li key={debt.id}>\n                                <strong>{debt.title}</strong> to {debt.receiver} — {debt.amount} zł\n                                <button onClick={() => deleteDebt(debt.id)}>Paid</button>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </section>\n            <form onSubmit={createDebt}>\n                <h4>Add new receipt here</h4>\n                <label htmlFor=\"title\">Title:</label>\n                <input type=\"text\" name=\"title\" placeholder=\"Title\"\n                    onChange={(e) => setTitle(e.target.value)}></input>\n                <label htmlFor=\"value\">Value:</label>\n                <input type=\"number\" name=\"value\" min=\"0\" step=\"0.01\"\n                    onChange={(e) => setDebtValue(e.target.value)}></input>\n                <label htmlFor=\"receiver\">To:</label>\n                <select name=\"receiver\" onChange={handleSelect} value={userId}>\n                    <option value=\"\">Choose receiver</option>\n                    {allUsers.map((user) => (\n                        <option key={user.id} value={user.id} id={user.username}>\n                            {user.username}\n                        </option>\n                    ))}\n                </select>\n                <button type=\"submit\">Add debt</button>\n            </form>\n            <button onClick={handleLogout}>Logout</button>\n        </main >\n    )\n}\n\nexport default ProtectedPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}